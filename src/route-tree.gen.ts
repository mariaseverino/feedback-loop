/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as NotFoundComponentRouteImport } from './routes/not-found-component'
import { Route as InternalRouteImport } from './routes/_internal'
import { Route as IndexRouteImport } from './routes/index'
import { Route as InternalTeamRouteImport } from './routes/_internal/team'
import { Route as InternalHelpRouteImport } from './routes/_internal/help'
import { Route as InternalFeedbackRouteImport } from './routes/_internal/feedback'
import { Route as InternalDashboardRouteImport } from './routes/_internal/dashboard'
import { Route as InternalBillingRouteImport } from './routes/_internal/billing'
import { Route as AuthResetPasswordRouteImport } from './routes/_auth/reset-password'
import { Route as AuthRequestResetPasswordRouteImport } from './routes/_auth/request-reset-password'
import { Route as AuthRegisterRouteImport } from './routes/_auth/register'
import { Route as AuthLoginRouteImport } from './routes/_auth/login'

const NotFoundComponentRoute = NotFoundComponentRouteImport.update({
  id: '/not-found-component',
  path: '/not-found-component',
  getParentRoute: () => rootRouteImport,
} as any)
const InternalRoute = InternalRouteImport.update({
  id: '/_internal',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const InternalTeamRoute = InternalTeamRouteImport.update({
  id: '/team',
  path: '/team',
  getParentRoute: () => InternalRoute,
} as any)
const InternalHelpRoute = InternalHelpRouteImport.update({
  id: '/help',
  path: '/help',
  getParentRoute: () => InternalRoute,
} as any)
const InternalFeedbackRoute = InternalFeedbackRouteImport.update({
  id: '/feedback',
  path: '/feedback',
  getParentRoute: () => InternalRoute,
} as any)
const InternalDashboardRoute = InternalDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => InternalRoute,
} as any)
const InternalBillingRoute = InternalBillingRouteImport.update({
  id: '/billing',
  path: '/billing',
  getParentRoute: () => InternalRoute,
} as any)
const AuthResetPasswordRoute = AuthResetPasswordRouteImport.update({
  id: '/_auth/reset-password',
  path: '/reset-password',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRequestResetPasswordRoute =
  AuthRequestResetPasswordRouteImport.update({
    id: '/_auth/request-reset-password',
    path: '/request-reset-password',
    getParentRoute: () => rootRouteImport,
  } as any)
const AuthRegisterRoute = AuthRegisterRouteImport.update({
  id: '/_auth/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/_auth/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/not-found-component': typeof NotFoundComponentRoute
  '/login': typeof AuthLoginRoute
  '/register': typeof AuthRegisterRoute
  '/request-reset-password': typeof AuthRequestResetPasswordRoute
  '/reset-password': typeof AuthResetPasswordRoute
  '/billing': typeof InternalBillingRoute
  '/dashboard': typeof InternalDashboardRoute
  '/feedback': typeof InternalFeedbackRoute
  '/help': typeof InternalHelpRoute
  '/team': typeof InternalTeamRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/not-found-component': typeof NotFoundComponentRoute
  '/login': typeof AuthLoginRoute
  '/register': typeof AuthRegisterRoute
  '/request-reset-password': typeof AuthRequestResetPasswordRoute
  '/reset-password': typeof AuthResetPasswordRoute
  '/billing': typeof InternalBillingRoute
  '/dashboard': typeof InternalDashboardRoute
  '/feedback': typeof InternalFeedbackRoute
  '/help': typeof InternalHelpRoute
  '/team': typeof InternalTeamRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_internal': typeof InternalRouteWithChildren
  '/not-found-component': typeof NotFoundComponentRoute
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/register': typeof AuthRegisterRoute
  '/_auth/request-reset-password': typeof AuthRequestResetPasswordRoute
  '/_auth/reset-password': typeof AuthResetPasswordRoute
  '/_internal/billing': typeof InternalBillingRoute
  '/_internal/dashboard': typeof InternalDashboardRoute
  '/_internal/feedback': typeof InternalFeedbackRoute
  '/_internal/help': typeof InternalHelpRoute
  '/_internal/team': typeof InternalTeamRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/not-found-component'
    | '/login'
    | '/register'
    | '/request-reset-password'
    | '/reset-password'
    | '/billing'
    | '/dashboard'
    | '/feedback'
    | '/help'
    | '/team'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/not-found-component'
    | '/login'
    | '/register'
    | '/request-reset-password'
    | '/reset-password'
    | '/billing'
    | '/dashboard'
    | '/feedback'
    | '/help'
    | '/team'
  id:
    | '__root__'
    | '/'
    | '/_internal'
    | '/not-found-component'
    | '/_auth/login'
    | '/_auth/register'
    | '/_auth/request-reset-password'
    | '/_auth/reset-password'
    | '/_internal/billing'
    | '/_internal/dashboard'
    | '/_internal/feedback'
    | '/_internal/help'
    | '/_internal/team'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  InternalRoute: typeof InternalRouteWithChildren
  NotFoundComponentRoute: typeof NotFoundComponentRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
  AuthRequestResetPasswordRoute: typeof AuthRequestResetPasswordRoute
  AuthResetPasswordRoute: typeof AuthResetPasswordRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/not-found-component': {
      id: '/not-found-component'
      path: '/not-found-component'
      fullPath: '/not-found-component'
      preLoaderRoute: typeof NotFoundComponentRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_internal': {
      id: '/_internal'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof InternalRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_internal/team': {
      id: '/_internal/team'
      path: '/team'
      fullPath: '/team'
      preLoaderRoute: typeof InternalTeamRouteImport
      parentRoute: typeof InternalRoute
    }
    '/_internal/help': {
      id: '/_internal/help'
      path: '/help'
      fullPath: '/help'
      preLoaderRoute: typeof InternalHelpRouteImport
      parentRoute: typeof InternalRoute
    }
    '/_internal/feedback': {
      id: '/_internal/feedback'
      path: '/feedback'
      fullPath: '/feedback'
      preLoaderRoute: typeof InternalFeedbackRouteImport
      parentRoute: typeof InternalRoute
    }
    '/_internal/dashboard': {
      id: '/_internal/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof InternalDashboardRouteImport
      parentRoute: typeof InternalRoute
    }
    '/_internal/billing': {
      id: '/_internal/billing'
      path: '/billing'
      fullPath: '/billing'
      preLoaderRoute: typeof InternalBillingRouteImport
      parentRoute: typeof InternalRoute
    }
    '/_auth/reset-password': {
      id: '/_auth/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof AuthResetPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/request-reset-password': {
      id: '/_auth/request-reset-password'
      path: '/request-reset-password'
      fullPath: '/request-reset-password'
      preLoaderRoute: typeof AuthRequestResetPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/register': {
      id: '/_auth/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof AuthRegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface InternalRouteChildren {
  InternalBillingRoute: typeof InternalBillingRoute
  InternalDashboardRoute: typeof InternalDashboardRoute
  InternalFeedbackRoute: typeof InternalFeedbackRoute
  InternalHelpRoute: typeof InternalHelpRoute
  InternalTeamRoute: typeof InternalTeamRoute
}

const InternalRouteChildren: InternalRouteChildren = {
  InternalBillingRoute: InternalBillingRoute,
  InternalDashboardRoute: InternalDashboardRoute,
  InternalFeedbackRoute: InternalFeedbackRoute,
  InternalHelpRoute: InternalHelpRoute,
  InternalTeamRoute: InternalTeamRoute,
}

const InternalRouteWithChildren = InternalRoute._addFileChildren(
  InternalRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  InternalRoute: InternalRouteWithChildren,
  NotFoundComponentRoute: NotFoundComponentRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
  AuthRequestResetPasswordRoute: AuthRequestResetPasswordRoute,
  AuthResetPasswordRoute: AuthResetPasswordRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
